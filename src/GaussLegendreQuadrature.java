import static java.lang.Math.cos;
import static java.lang.Math.pow;

public class GaussLegendreQuadrature {
    int n;
    double a, b;
    double[] w, t;
    GaussLegendreQuadrature(int n){
        this.n = n;
        a = 0.4;
        b = 1.3;
        weightAbscissaFiller(n);
    }
    void weightAbscissaFiller(int n){
        w = new double[n];
        t = new double[n];

        switch (n){
            case 2:
                w[0] = 1;
                w[1] = 1;
                t[0] = -0.5773502691896257;
                t[1] = 0.5773502691896257;
                break;
            case 4:
                w[0] = 0.6521451548625461;
                w[1] = 0.6521451548625461;
                w[2] = 0.3478548451374538;
                w[3] = 0.3478548451374538;
                t[0] = -0.3399810435848563;
                t[1] = 0.3399810435848563;
                t[2] = -0.8611363115940526;
                t[3] = 0.8611363115940526;
                break;
            case 6:
                w[0] = 0.3607615730481386;
                w[1] = 0.3607615730481386;
                w[2] = 0.4679139345726910;
                w[3] = 0.4679139345726910;
                w[4] = 0.1713244923791704;
                w[5] = 0.1713244923791704;
                t[0] = 0.6612093864662645;
                t[1] = -0.6612093864662645;
                t[2] = -0.2386191860831969;
                t[3] = 0.2386191860831969;
                t[4] = -0.9324695142031521;
                t[5] = 0.9324695142031521;
                break;
            case 8:
                w[0] = 0.3626837833783620;
                w[1] = 0.3626837833783620;
                w[2] = 0.3137066458778873;
                w[3] = 0.3137066458778873;
                w[4] = 0.2223810344533745;
                w[5] = 0.2223810344533745;
                w[6] = 0.1012285362903763;
                w[7] = 0.1012285362903763;
                t[0] = -0.1834346424956498;
                t[1] = 0.1834346424956498;
                t[2] = -0.5255324099163290;
                t[3] = 0.5255324099163290;
                t[4] = -0.7966664774136267;
                t[5] = 0.7966664774136267;
                t[6] = -0.9602898564975363;
                t[7] = 0.9602898564975363;
                break;
            case 10:
                w[0] = 0.2955242247147529;
                w[1] = 0.2955242247147529;
                w[2] = 0.2692667193099963;
                w[3] = 0.2692667193099963;
                w[4] = 0.2190863625159820;
                w[5] = 0.2190863625159820;
                w[6] = 0.1494513491505806;
                w[7] = 0.1494513491505806;
                w[8] = 0.0666713443086881;
                w[9] = 0.0666713443086881;
                t[0] = -0.1488743389816312;
                t[1] = 0.1488743389816312;
                t[2] = -0.4333953941292472;
                t[3] = 0.4333953941292472;
                t[4] = -0.6794095682990244;
                t[5] = 0.6794095682990244;
                t[6] = -0.8650633666889845;
                t[7] = 0.8650633666889845;
                t[8] = -0.9739065285171717;
                t[9] = 0.9739065285171717;
                break;

            case 16:
                w[0] = 0.1894506104550685;
                w[1] = 0.1894506104550685;
                w[2] = 0.1826034150449236;
                w[3] = 0.1826034150449236;
                w[4] = 0.1691565193950025;
                w[5] = 0.1691565193950025;
                w[6] = 0.1495959888165767;
                w[7] = 0.1495959888165767;
                w[8] = 0.1246289712555339;
                w[9] = 0.1246289712555339;
                w[10] = 0.0951585116824928;
                w[11] = 0.0951585116824928;
                w[12] = 0.0622535239386479;
                w[13] = 0.0622535239386479;
                w[14] = 0.0271524594117541;
                w[15] = 0.0271524594117541;
                t[0] = -0.0950125098376374;
                t[1] = 0.0950125098376374;
                t[2] = -0.2816035507792589;
                t[3] = 0.2816035507792589;
                t[4] = -0.4580167776572274;
                t[5] = 0.4580167776572274;
                t[6] = -0.6178762444026438;
                t[7] = 0.6178762444026438;
                t[8] = -0.7554044083550030;
                t[9] = 0.7554044083550030;
                t[10] = -0.8656312023878318;
                t[11] = 0.8656312023878318;
                t[12] = -0.8656312023878318;
                t[13] = 0.8656312023878318;
                t[14] = -0.9894009349916499;
                t[15] = 0.9894009349916499;
                break;
        }

    }
    void weightAbscissaPrinter(){
        System.out.println("Weights:");
        for(int i = 0; i< w.length; i++){
            System.out.print(w[i] + ", ");
        }
        System.out.println();
        System.out.println("Abscissas");
        for(int i = 0; i< t.length; i++){
            System.out.print(t[i] + ", ");
        }
    }

    

    double calc(double x){
        return ((1.4 * x) + 0.3) / (2.3 + cos(0.4 * pow(x, 2) + 1));
    }

}
